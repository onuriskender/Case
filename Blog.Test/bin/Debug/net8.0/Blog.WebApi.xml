<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.WebApi</name>
    </assembly>
    <members>
        <member name="M:Blog.WebApi.Controllers.AuthenticationController.Register(Blog.Common.Dtos.Authentication.RegisterUserDto)">
             <summary>
             Registers a new user.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/authentication/register
                 {
                    "email": "user@example.com",
                    "password": "password123"
                 }
            
             </remarks>
             <param name="dto">The registration details of the user.</param>
             <returns>A response containing the result of the registration operation.</returns>
             <response code="200">Returns the result of the registration operation.</response>
             <response code="400">If the registration details are invalid.</response>
             <response code="404">If the body is empty.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.AuthenticationController.GetToken(Blog.Common.Dtos.Authentication.LoginDto)">
             <summary>
             Provides a token for the user.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/authentication/token
                 {
                    "email": "user@example.com",
                    "password": "password123"
                 }
            
             </remarks>
             <param name="dto">The login details of the user.</param>
             <returns>A response containing the generated token if the authentication is successful.</returns>
             <response code="200">Returns the generated token if the authentication is successful.</response>
             <response code="401">If the password is invalid.</response>
             <response code="404">If the body is null or user cannot found in db.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.PostsController.Get">
             <summary>
             Gets all active posts.
             </summary>
             <remarks>
             Sample request:
            
                 GET /api/posts
            
             </remarks>
             <returns>A list of active posts.</returns>
             <response code="200">Returns the list of active posts.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.PostsController.Get(System.Int32)">
             <summary>
             Gets a specific post by ID.
             </summary>
             <remarks>
             Sample request:
            
                 GET /api/posts/5
            
             </remarks>
             <param name="id">The ID of the post to be retrieved.</param>
             <returns>A post with the specified ID.</returns>
             <response code="200">Returns the post with the specified ID.</response>
             <response code="400">If the ID equals to or less than zero.</response>
             <response code="404">If the post with the specified ID is not found.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.PostsController.Post(Blog.Common.Dtos.Post.CreatePostDto)">
             <summary>
             Creates a new post.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/posts
                 {
                    "title": "Post Title",
                    "content": "Post Content"
                 }
            
             </remarks>
             <param name="dto">The details of the post to be created.</param>
             <returns>A response containing the result of the creation operation.</returns>
             <response code="201">Returns the result of the creation operation.</response>
             <response code="400">If the post details are invalid.</response>
             <response code="404">If the body is null.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.PostsController.Patch(Blog.Common.Dtos.Post.UpdatePostDto,System.Int32)">
             <summary>
             Updates a specific post.
             </summary>
             <remarks>
             Sample request:
            
                 PATCH /api/posts/5
                 {
                    "title": "Updated Title",
                    "content": "Updated Content"
                 }
            
             </remarks>
             <param name="dto">The updated details of the post.</param>
             <param name="id">The ID of the post to be updated.</param>
             <returns>A response containing the result of the update operation.</returns>
             <response code="200">Returns the result of the update operation.</response>
             <response code="400">If the post with the specified ID is not found.</response>
             <response code="401">If the user is not the owner of the post.</response>
             <response code="404">If the post is not found.</response>
        </member>
        <member name="M:Blog.WebApi.Controllers.PostsController.Delete(System.Int32)">
             <summary>
             Deletes a specific post.
             </summary>
             <remarks>
             Sample request:
            
                 DELETE /api/posts/5
            
             </remarks>
             <param name="id">The ID of the post to be deleted.</param>
             <returns>A response containing the result of the deletion operation.</returns>
             <response code="200">Returns the result of the deletion operation.</response>
             <response code="400">If the post with the specified ID is not found.</response>
             <response code="401">If the user is not the owner of the post.</response>
             <response code="404">If the post is not found.</response>
        </member>
    </members>
</doc>
